AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),
  and default routes for them in the private subnets.

Resources:
  CDDemoLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: car-price-retrieval.lambda_handler
      Runtime: python3.8
      CodeUri: ./services
      Description: 'Lambda function for CD Demo'
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        getAZsAPI:
           Type: Api
           Properties:
             Path: /getazs
             Method: post
      Environment:
        Variables:
          REGION: ap-southeast-1
      VpcConfig:
        SecurityGroupIds: 
          - sg-0411558d8a47b0442
        SubnetIds:
          - subnet-0179c1a5c22cb282b
          - subnet-0cc5cb36ca0766b95
      Policies:
        - AWSLambdaVPCAccessExecutionRole    

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        # -  arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess          

            
