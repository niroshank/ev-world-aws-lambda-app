AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description:  This template deploys a serverless application
Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: DynamoDBTable
      AttributeDefinitions:
        - 
           AttributeName: id
           AttributeType: 'N'
      KeySchema:
        - 
           AttributeName: id
           KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 10 
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaDyanmoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "dynamodb:*"
                Resource: !GetAtt
                  - DynamoDBTable
                  - Arn
                Effect: Allow  
  PriceRetrievalLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: car-price-retrieval.lambda_handler
      Runtime: python3.8
      CodeUri: ./services
      Description: 'Lambda function for price retrieval'
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        getCarPriceAPI:
          Type: Api
          Properties:
            Path: /car-price-retrieval
            Method: post       
      Environment:
                Variables:
                    REGION: ap-southeast-1  
                    DDB: DynamoDBTable
  ModelSearchLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: car-model-search.lambda_handler
      Runtime: python3.8
      CodeUri: ./services
      Description: 'Lambda function for model search'
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        getCarModelAPI:
          Type: Api
          Properties:
            Path: /car-model-search
            Method: post       
      Environment:
                Variables:
                    REGION: ap-southeast-1  
                    DDB: DynamoDBTable         
  OptionsRetrievalLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: car-option-retrieval.lambda_handler
      Runtime: python3.8
      CodeUri: ./services
      Description: 'Lambda function for option retrieval'
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        getCarOptionsAPI:
          Type: Api
          Properties:
            Path: /car-option-retrieval
            Method: post       
      Environment:
                Variables:
                    REGION: ap-southeast-1  
                    DDB: DynamoDBTable           